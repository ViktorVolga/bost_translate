Асинхронные операции это базовый модуль композиции в асинхронной модели библиотеки. Асинхронные операции представляют работу которая запущена
и выполняется на заднем фоне, в то время как пользовательский код, который иниицализировал работу может продолжать работу с другими вещами.
Концептуально жизненный цикл асинхронных операций может быть описан следующими событиями и фазами:
    Событие: Асинхронная функция была вызвана функцией инициализации. -> Асинхронная операция выполняется ->
    Событие: Внешний наблюдаемый сторонний эффект если таковой полностью завершен. Обработчик завершения добавляется в очередь для исполнения ->
    Асинхронная операция завершена. ->
    Событие: Обработчик завершения вызван с результатами операции.

Функция инициализации - функция которая может быть вызвана пользователем для старта выполнения асинхронных операций. 
Обработчик завершения - предоставленная пользователем функция, не копирующая, перемещающая объект функция, который будет вызвана по крайне мере
один раз и содержащая результаты выполнения асинхронной операции. Вызов обработчика завершения говорит пользователю, о чем то что уже случилось:
операция завершилась и сторонний эффек от выполнения операции был достигнут.
Инициализирующая функция и обработчик завершения в пользовательском коде взаимодействуют следующим образом:
Функция инициализации -> асинхронная операция -> обработчик завершения
 

